// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: sets.sql

package pg_database

import (
	"context"
)

const createSet = `-- name: CreateSet :one
insert into 
gowebapp.sets
(Exercise_Id, Weight)
values ($1, $2)
returning set_id, exercise_id, weight
`

type CreateSetParams struct {
	ExerciseID int64
	Weight     int32
}

// insert new exercise sets
func (q *Queries) CreateSet(ctx context.Context, arg CreateSetParams) (GowebappSet, error) {
	row := q.db.QueryRowContext(ctx, createSet, arg.ExerciseID, arg.Weight)
	var i GowebappSet
	err := row.Scan(&i.SetID, &i.ExerciseID, &i.Weight)
	return i, err
}

const updateSet = `-- name: UpdateSet :one
update gowebapp.sets
set (Exercise_Id, Weight) = ($1, $2)
where set_id = $3
returning set_id, exercise_id, weight
`

type UpdateSetParams struct {
	ExerciseID int64
	Weight     int32
	SetID      int64
}

// insert a set id
func (q *Queries) UpdateSet(ctx context.Context, arg UpdateSetParams) (GowebappSet, error) {
	row := q.db.QueryRowContext(ctx, updateSet, arg.ExerciseID, arg.Weight, arg.SetID)
	var i GowebappSet
	err := row.Scan(&i.SetID, &i.ExerciseID, &i.Weight)
	return i, err
}
